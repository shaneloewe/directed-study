(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('rxjs')) :
    typeof define === 'function' && define.amd ? define('ng-google-one-tap', ['exports', '@angular/core', 'rxjs'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global['ng-google-one-tap'] = {}, global.ng.core, global.rxjs));
}(this, (function (exports, core, rxjs) { 'use strict';

    var CONFIGURATION = new core.InjectionToken('CONFIGURATION');

    var NgOneTapService = /** @class */ (function () {
        function NgOneTapService(envConfig, ngZone) {
            this.envConfig = envConfig;
            this.ngZone = ngZone;
            this._promtMoment = new rxjs.Subject();
            this._oneTapCredentialResponse = new rxjs.Subject();
            this._authUserResponse = new rxjs.Subject();
        }
        Object.defineProperty(NgOneTapService.prototype, "promtMoment", {
            get: function () {
                return this._promtMoment.asObservable();
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(NgOneTapService.prototype, "oneTapCredentialResponse", {
            get: function () {
                return this._oneTapCredentialResponse.asObservable();
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(NgOneTapService.prototype, "authUserResponse", {
            get: function () {
                return this._authUserResponse.asObservable();
            },
            enumerable: false,
            configurable: true
        });
        NgOneTapService.prototype.tapInitialize = function (config) {
            var _this = this;
            window.onload = function () {
                _this.tapRender(config);
            };
            if (document.readyState == 'complete') {
                this.tapRender(config);
            }
        };
        NgOneTapService.prototype.tapRender = function (config) {
            var _this = this;
            var conf = Object.assign(Object.assign({}, this.envConfig), config);
            if (conf === null || conf === void 0 ? void 0 : conf.disable_exponential_cooldowntime) {
                document.cookie = 'g_state' + '=;Path=/;';
            }
            window.google.accounts.id.initialize(Object.assign(Object.assign({}, conf), { callback: function (auth) {
                    _this.ngZone.run(function () {
                        if (conf.authvalidate_by_googleapis) {
                            var http_1 = new XMLHttpRequest();
                            var url = "https://oauth2.googleapis.com/tokeninfo?id_token=" + auth.credential;
                            http_1.open('GET', url);
                            http_1.send();
                            http_1.onreadystatechange = function () {
                                if (http_1.readyState == 4 && http_1.status == 200) {
                                    _this._authUserResponse.next(JSON.parse(http_1.responseText));
                                }
                            };
                        }
                        _this._oneTapCredentialResponse.next(auth);
                    });
                } }));
            window.google.accounts.id.prompt(function (pmt) {
                _this._promtMoment.next(pmt);
            });
        };
        NgOneTapService.prototype.signOut = function () {
            window.google.accounts.id.disableAutoSelect();
        };
        NgOneTapService.prototype.cancelTheTap = function () {
            window.google.accounts.id.cancel();
        };
        return NgOneTapService;
    }());
    NgOneTapService.decorators = [
        { type: core.Injectable }
    ];
    NgOneTapService.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: core.Inject, args: [CONFIGURATION,] }] },
        { type: core.NgZone }
    ]; };

    var NgGoogleOneTapModule = /** @class */ (function () {
        function NgGoogleOneTapModule() {
            var oneTapLib = document.createElement('script');
            oneTapLib.async = true;
            oneTapLib.src = 'https://accounts.google.com/gsi/client';
            document.head.appendChild(oneTapLib);
        }
        NgGoogleOneTapModule.config = function (config) {
            return {
                ngModule: NgGoogleOneTapModule,
                providers: [
                    { provide: CONFIGURATION, useValue: config },
                    NgOneTapService
                ]
            };
        };
        return NgGoogleOneTapModule;
    }());
    NgGoogleOneTapModule.decorators = [
        { type: core.NgModule, args: [{
                    declarations: [],
                    imports: [],
                    exports: []
                },] }
    ];
    NgGoogleOneTapModule.ctorParameters = function () { return []; };

    /*
     * Public API Surface of ng-google-one-tap
     */

    /**
     * Generated bundle index. Do not edit.
     */

    exports.NgGoogleOneTapModule = NgGoogleOneTapModule;
    exports.NgOneTapService = NgOneTapService;
    exports.Éµa = CONFIGURATION;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=ng-google-one-tap.umd.js.map
