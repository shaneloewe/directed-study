{"version":3,"sources":["../../../projects/ng-google-one-tap/src/lib/toke.ts","../../../projects/ng-google-one-tap/src/lib/ng-google-one-tap.service.ts","../../../projects/ng-google-one-tap/src/lib/ng-google-one-tap.module.ts"],"names":["CONFIGURATION","InjectionToken","NgOneTapService","envConfig","ngZone","this","_promtMoment","Subject","_oneTapCredentialResponse","_authUserResponse","Object","defineProperty","prototype","asObservable","tapInitialize","config","_this","window","onload","tapRender","document","readyState","conf","assign","disable_exponential_cooldowntime","cookie","google","accounts","id","initialize","callback","auth","run","authvalidate_by_googleapis","http_1","XMLHttpRequest","url","credential","open","send","onreadystatechange","status","next","JSON","parse","responseText","prompt","pmt","signOut","disableAutoSelect","cancelTheTap","cancel","Injectable","Inject","args","NgZone","NgGoogleOneTapModule","oneTapLib","createElement","async","src","head","appendChild","ngModule","providers","provide","useValue","NgModule","declarations","imports","exports"],"mappings":"yWAGaA,EAAgB,IAAIC,EAAAA,eAA8B,8BCwB3D,SAAAC,EAA2CC,EACnCC,GADmCC,KAAAF,UAAAA,EACnCE,KAAAD,OAAAA,EAjBAC,KAAAC,aAAe,IAAIC,EAAAA,QACnBF,KAAAG,0BAA4B,IAAID,EAAAA,QAChCF,KAAAI,kBAAoB,IAAIF,EAAAA,eAEhCG,OAAAC,eAAIT,EAAAU,UAAA,cAAW,KAAf,WACI,OAAOP,KAAKC,aAAaO,gDAG7BH,OAAAC,eAAIT,EAAAU,UAAA,2BAAwB,KAA5B,WACI,OAAOP,KAAKG,0BAA0BK,gDAG1CH,OAAAC,eAAIT,EAAAU,UAAA,mBAAgB,KAApB,WACI,OAAOP,KAAKI,kBAAkBI,gDAMlCX,EAAAU,UAAAE,cAAA,SAAcC,GAAd,IAAAC,EAAAX,KACIY,OAAOC,OAAS,WACZF,EAAKG,UAAUJ,IAEQ,YAAvBK,SAASC,YACThB,KAAKc,UAAUJ,IAIfb,EAAAU,UAAAO,UAAA,SAAUJ,GAAV,IAAAC,EAAAX,KACEiB,EAAIZ,OAAAa,OAAAb,OAAAa,OAAA,GAAOlB,KAAKF,WAAcY,IAChCO,MAAAA,OAAI,EAAJA,EAAME,oCACNJ,SAASK,OAAS,oBAEtBR,OAAOS,OAAOC,SAASC,GAAGC,WAAUnB,OAAAa,OAAAb,OAAAa,OAAA,GAC7BD,GAAI,CAAEQ,SAAU,SAACC,GAChBf,EAAKZ,OAAO4B,KAAI,WACZ,GAAIV,EAAKW,2BAA4B,CACjC,IAAMC,EAAO,IAAIC,eACXC,EAAM,oDAAoDL,EAAKM,WACrEH,EAAKI,KAAK,MAAOF,GACjBF,EAAKK,OACLL,EAAKM,mBAAqB,WACC,GAAnBN,EAAKb,YAAkC,KAAfa,EAAKO,QAC7BzB,EAAKP,kBAAkBiC,KAAKC,KAAKC,MAAMV,EAAKW,gBAIxD7B,EAAKR,0BAA0BkC,KAAKX,UAIhDd,OAAOS,OAAOC,SAASC,GAAGkB,QAAO,SAACC,GAC9B/B,EAAKV,aAAaoC,KAAKK,OAI/B7C,EAAAU,UAAAoC,QAAA,WACI/B,OAAOS,OAAOC,SAASC,GAAGqB,qBAG9B/C,EAAAU,UAAAsC,aAAA,WACIjC,OAAOS,OAAOC,SAASC,GAAGuB,mCAhEjCC,EAAAA,+EAmBgBC,EAAAA,OAAMC,KAAA,CAACtD,YA1BHuD,EAAAA,2BCejB,SAAAC,IACI,IAAIC,EAAYrC,SAASsC,cAAc,UACvCD,EAAUE,OAAQ,EAClBF,EAAUG,IAAM,yCAChBxC,SAASyC,KAAKC,YAAYL,UAEhBD,EAAAzC,OAAP,SAAcA,GACjB,MAAO,CACHgD,SAAUP,EACVQ,UAAW,CACP,CAACC,QAASjE,EAAekE,SAAUnD,GACnCb,8BArBfiE,EAAAA,SAAQb,KAAA,CAAC,CACNc,aAAc,GAEdC,QAAS,GAETC,QAAS","sourcesContent":["import { configuration } from './model/tap.model';\nimport { InjectionToken } from \"@angular/core\";\n\nexport const CONFIGURATION = new InjectionToken<configuration>('CONFIGURATION')","import { configuration, credentialRes, UserInfo } from './model/tap.model';\nimport { Injectable, NgZone } from '@angular/core';\nimport { Inject } from '@angular/core';\nimport { CONFIGURATION } from './toke';\nimport { Subject } from 'rxjs';\nimport { PromptMomentNotification } from './model/promptmoment.model';\n\ndeclare var window: any;\n@Injectable()\nexport class NgOneTapService {\n\n    private _promtMoment = new Subject<PromptMomentNotification>();\n    private _oneTapCredentialResponse = new Subject<credentialRes>();\n    private _authUserResponse = new Subject<UserInfo>();\n\n    get promtMoment() {\n        return this._promtMoment.asObservable();\n    }\n\n    get oneTapCredentialResponse() {\n        return this._oneTapCredentialResponse.asObservable();\n    }\n\n    get authUserResponse() {\n        return this._authUserResponse.asObservable();\n    }\n\n    constructor(@Inject(CONFIGURATION) private envConfig: configuration,\n    private ngZone: NgZone) { }\n\n    tapInitialize(config?: configuration) {\n        window.onload = () => {\n            this.tapRender(config);\n        }\n        if (document.readyState == 'complete') {\n            this.tapRender(config);\n        }\n    }\n\n    private tapRender(config: configuration) {\n        const conf = {...this.envConfig, ...config };\n        if (conf?.disable_exponential_cooldowntime) {\n            document.cookie = 'g_state' +'=;Path=/;';\n        }\n        window.google.accounts.id.initialize({\n            ...conf, callback: (auth) => {\n                this.ngZone.run(() => {\n                    if (conf.authvalidate_by_googleapis) {\n                        const http = new XMLHttpRequest();\n                        const url = `https://oauth2.googleapis.com/tokeninfo?id_token=${auth.credential}`;\n                        http.open('GET', url);\n                        http.send();\n                        http.onreadystatechange = () => {\n                            if (http.readyState == 4 && http.status == 200) {\n                                this._authUserResponse.next(JSON.parse(http.responseText));\n                            }\n                        };\n                    }\n                    this._oneTapCredentialResponse.next(auth);\n                });\n            }\n        });\n        window.google.accounts.id.prompt((pmt) => {\n            this._promtMoment.next(pmt);\n        });\n    }\n\n    signOut() {\n        window.google.accounts.id.disableAutoSelect();\n    }\n\n    cancelTheTap() {\n        window.google.accounts.id.cancel();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { configuration } from './model/tap.model';\nimport { NgOneTapService } from './ng-google-one-tap.service';\nimport { CONFIGURATION } from './toke';\n\n\n@NgModule({\n    declarations: [\n    ],\n    imports: [\n    ],\n    exports: [\n    ]\n})\n\nexport class NgGoogleOneTapModule {\n    constructor() {\n        let oneTapLib = document.createElement('script');\n        oneTapLib.async = true;\n        oneTapLib.src = 'https://accounts.google.com/gsi/client';\n        document.head.appendChild(oneTapLib);\n    }\n    public static config(config: configuration): any {        \n        return {\n            ngModule: NgGoogleOneTapModule,\n            providers: [\n                {provide: CONFIGURATION, useValue: config},\n                NgOneTapService\n            ]\n        }\n    }\n}\n"]}